from django.shortcuts import render, get_object_or_404
from .models import Post

""" A Django view is just a Python function that receives a web request and returns a      web response. All the logic to return the desired response goes inside the view
    First, you will create your application views,
    Then you will define a URL pattern for each view,
    Finally, you will create HTML templates to render the data generated by the views.

    Each view will render a template, passing variables to it, and will return an HTTP
    response with the rendered output.


    render():
        -  It takes the request object, the template path, and the context variables      to render the given template.
        -  It returns an HttpResponse object with the rendered text (normally HTML        code).

        The render() shortcut takes the request context into account, so any variable set by the template context processors is accessible by the given template.    Template context processors are callables that set variables into the context.
"""

# this view, will display the list of posts
def post_list(request):
    posts = Post.published.all()
    return render(request,'blog/post/list.html',{'posts':posts})

# This view displays a single post
def post_detail(request, year, month, day, post):

    """
        -   This is similar to object retreival that I wrote helps in manage.py only        If it can't find the object with specified parameters, it returns a HTTP        404 (not found) exception

        -   We filter it by date, because in our models.py, we set the slug to be
            unique_by_date=publish, so that we would only have 1 post per date for     each slug
    """

    post = get_object_or_404(Post,
                             slug=post,
                             status='published',
                             publish__year=year,
                             publish__month=month,
                             publish__day=day)

    return render(request,'blog/post/detail.html', {'post':post})